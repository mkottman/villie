#############################################################################
# Makefile for building: build/Debug/villie
# Generated by qmake (2.01a) (Qt 4.5.2) on: Mon Oct 26 21:09:30 2009
# Project:  villie.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile villie.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtWebKit -I/usr/include/qt4 -Imoc -Igui
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtWebKit -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = build/

####### Files

SOURCES       = gui/main_window.cpp \
		core/edge.cpp \
		core/graph.cpp \
		core/node.cpp \
		core/element.cpp \
		main.cpp \
		gui/velement.cpp \
		gui/vnode.cpp \
		gui/vedge.cpp \
		gui/vector.cpp \
		gui/layouter.cpp \
		gui/graphscene.cpp \
		gui/graphview.cpp \
		gui/connector.cpp moc/moc_main_window.cpp \
		moc/moc_layouter.cpp
OBJECTS       = build/main_window.o \
		build/edge.o \
		build/graph.o \
		build/node.o \
		build/element.o \
		build/main.o \
		build/velement.o \
		build/vnode.o \
		build/vedge.o \
		build/vector.o \
		build/layouter.o \
		build/graphscene.o \
		build/graphview.o \
		build/connector.o \
		build/moc_main_window.o \
		build/moc_layouter.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		villie.pro
QMAKE_TARGET  = villie
DESTDIR       = build/Debug/
TARGET        = build/Debug/villie

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): gui/ui_main_window.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) build/Debug/ || $(MKDIR) build/Debug/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: villie.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtWebKit.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile villie.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtWebKit.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile villie.pro

dist: 
	@$(CHK_DIR_EXISTS) build/villie1.0.0 || $(MKDIR) build/villie1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) build/villie1.0.0/ && $(COPY_FILE) --parents gui/main_window.h core/common.h core/edge.h core/graph.h core/node.h core/element.h gui/velement.h gui/vnode.h gui/vedge.h gui/vector.h gui/layouter.h gui/graphscene.h gui/graphview.h gui/connector.h build/villie1.0.0/ && $(COPY_FILE) --parents gui/main_window.cpp core/edge.cpp core/graph.cpp core/node.cpp core/element.cpp main.cpp gui/velement.cpp gui/vnode.cpp gui/vedge.cpp gui/vector.cpp gui/layouter.cpp gui/graphscene.cpp gui/graphview.cpp gui/connector.cpp build/villie1.0.0/ && $(COPY_FILE) --parents gui/main_window.ui build/villie1.0.0/ && (cd `dirname build/villie1.0.0` && $(TAR) villie1.0.0.tar villie1.0.0 && $(COMPRESS) villie1.0.0.tar) && $(MOVE) `dirname build/villie1.0.0`/villie1.0.0.tar.gz . && $(DEL_FILE) -r build/villie1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc/moc_main_window.cpp moc/moc_layouter.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc/moc_main_window.cpp moc/moc_layouter.cpp
moc/moc_main_window.cpp: gui/ui_main_window.h \
		gui/graphview.h \
		core/graph.h \
		core/common.h \
		core/element.h \
		core/edge.h \
		core/node.h \
		gui/layouter.h \
		gui/vector.h \
		gui/graphscene.h \
		gui/main_window.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/main_window.h -o moc/moc_main_window.cpp

moc/moc_layouter.cpp: core/graph.h \
		core/common.h \
		core/element.h \
		core/edge.h \
		core/node.h \
		gui/vector.h \
		gui/graphscene.h \
		gui/layouter.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) gui/layouter.h -o moc/moc_layouter.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: gui/ui_main_window.h
compiler_uic_clean:
	-$(DEL_FILE) gui/ui_main_window.h
gui/ui_main_window.h: gui/main_window.ui \
		gui/graphview.h
	/usr/bin/uic-qt4 gui/main_window.ui -o gui/ui_main_window.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

build/main_window.o: gui/main_window.cpp gui/main_window.h \
		gui/ui_main_window.h \
		gui/graphview.h \
		core/graph.h \
		core/common.h \
		core/element.h \
		core/edge.h \
		core/node.h \
		gui/layouter.h \
		gui/vector.h \
		gui/graphscene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/main_window.o gui/main_window.cpp

build/edge.o: core/edge.cpp core/edge.h \
		core/common.h \
		core/element.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/edge.o core/edge.cpp

build/graph.o: core/graph.cpp core/graph.h \
		core/common.h \
		core/element.h \
		core/edge.h \
		core/node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/graph.o core/graph.cpp

build/node.o: core/node.cpp core/node.h \
		core/common.h \
		core/element.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/node.o core/node.cpp

build/element.o: core/element.cpp core/element.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/element.o core/element.cpp

build/main.o: main.cpp gui/main_window.h \
		gui/ui_main_window.h \
		gui/graphview.h \
		core/graph.h \
		core/common.h \
		core/element.h \
		core/edge.h \
		core/node.h \
		gui/layouter.h \
		gui/vector.h \
		gui/graphscene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/main.o main.cpp

build/velement.o: gui/velement.cpp gui/velement.h \
		gui/vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/velement.o gui/velement.cpp

build/vnode.o: gui/vnode.cpp gui/vnode.h \
		gui/velement.h \
		gui/vector.h \
		core/node.h \
		core/common.h \
		core/element.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/vnode.o gui/vnode.cpp

build/vedge.o: gui/vedge.cpp gui/vedge.h \
		gui/velement.h \
		gui/vector.h \
		core/edge.h \
		core/common.h \
		core/element.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/vedge.o gui/vedge.cpp

build/vector.o: gui/vector.cpp gui/vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/vector.o gui/vector.cpp

build/layouter.o: gui/layouter.cpp gui/layouter.h \
		core/graph.h \
		core/common.h \
		core/element.h \
		core/edge.h \
		core/node.h \
		gui/vector.h \
		gui/graphscene.h \
		gui/velement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/layouter.o gui/layouter.cpp

build/graphscene.o: gui/graphscene.cpp gui/graphscene.h \
		core/graph.h \
		core/common.h \
		core/element.h \
		core/edge.h \
		core/node.h \
		gui/velement.h \
		gui/vector.h \
		gui/vnode.h \
		gui/vedge.h \
		gui/connector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/graphscene.o gui/graphscene.cpp

build/graphview.o: gui/graphview.cpp gui/graphview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/graphview.o gui/graphview.cpp

build/connector.o: gui/connector.cpp gui/connector.h \
		gui/velement.h \
		gui/vector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/connector.o gui/connector.cpp

build/moc_main_window.o: moc/moc_main_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/moc_main_window.o moc/moc_main_window.cpp

build/moc_layouter.o: moc/moc_layouter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/moc_layouter.o moc/moc_layouter.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

